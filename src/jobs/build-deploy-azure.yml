description: >
  Build and Deploy to AZ

executor: default

parameters:
  az-fingerprints:
    type: string
    default: ""
    description: "Environment fingerprints"
  az-user:
    type: string
    default: ""
    description: "Azure Environment User"
  az-site:
    type: string
    default: ""
    description: "Azure Environment Site"
  az-env:
    type: enum
    enum: [ 'dev', 'test', 'prod' ]
    default: 'dev'
    description: "Azure environment name"
  az-deploy-type:
    type: enum
    enum: [ 'code, db', 'code' ]
    default: 'code, db'
    description: "Azure deployment type"
  tag:
    default: build-v1.0.$CIRCLE_BUILD_NUM
    type: string
    description: 'Tag to be created from the BLT build'
  git-fingerprints:
    type: string
    default: ""
    description: "Git fingerprints for pushing tags"
  git-username:
    default: ""
    type: string
    description: 'The automation username to push the tag.'
  git-email:
    default: ""
    type: string
    description: 'The automation user email to push the tag.'
  slack-channel:
    type: string
    default: ""
    description: "Slack Channel"
  with-jira:
    type: boolean
    default: true
    description: Create version and transition tickets.
  jira-transition-id:
    type: string
    default: ""
    description: "The Jira transition ID"
  jira-project:
    default: ""
    type: string
    description: 'The Jira project'
  jira-url:
    default: ""
    type: string
    description: 'The Jira Cloud URL'
  with_cache:
    type: boolean
    default: true
    description: Whether to save and restore cache or not.
  cache_version:
    description: The cache version to use. Increment to build with fresh cache (default "v1").
    type: string
    default: "v1"
environment:
  BASH_ENV: /etc/profile
steps:
  - run:
      name: Setup Environment Variables
      command: |
        echo "export PATH=`pwd`/vendor/bin:$PATH" >> $BASH_ENV
        source $BASH_ENV
  - checkout
  - add_ssh_keys:
      fingerprints:
        - << parameters.az-fingerprints >>
  - run:
      name: SSH Disable Host Key Checking
      command: |
        echo "StrictHostKeyChecking=no">> ~/.ssh/config
  - when:
      condition: <<parameters.with_cache>>
      steps:
        - restore_cache:
            keys:
              - <<parameters.cache_version>>-composer-cache
  - when:
      condition: <<parameters.with_cache>>
      steps:
        - restore_cache:
            keys:
              - <<parameters.cache_version>>-composer-{{ checksum "composer.lock" }}
  - run:
      name: Install dependencies
      command: |
        composer install \
          --no-interaction \
          --no-progress
  - run:
      name: Install custom themes nodejs dependencies recursively.
      command: |
        cd docroot/themes/custom && \
        find . -name package.json -not -path "*/node_modules/*" -exec bash -c "npm --prefix \$(dirname {}) install" \;
  - when:
      condition: <<parameters.with_cache>>
      steps:
        - save_cache:
            key: <<parameters.cache_version>>-composer-cache
            paths:
              - ~/.composer/cache
  - when:
      condition: <<parameters.with_cache>>
      steps:
        - save_cache:
            key: <<parameters.cache_version>>-composer-{{ checksum "composer.lock" }}
            paths:
              - vendor
              - docroot/themes/custom/voa/node_modules
              - docroot/themes/custom/voa_admin/node_modules
              - docroot/themes/custom/voa_amp/node_modules
  - blt-build:
      tag: << parameters.tag >>
  - blt-deploy:
      tag: << parameters.tag >>
      env: << parameters.az-env >>
      deploy-type: << parameters.az-deploy-type >>
      az-site: << parameters.az-site >>
      az-user: << parameters.az-user >>
  - add_ssh_keys:
      fingerprints:
        - << parameters.git-fingerprints >>
  - git-publisher:
      tag: << parameters.tag >>
      git-username: << parameters.git-username >>
      git-email: << parameters.git-email >>
  - when:
      condition: << parameters.with-jira >>
      steps:
        - jira-version:
            tag: << parameters.tag >>
            project: << parameters.jira-project >>
            jira-url: << parameters.jira-url >>
        - jira-transition:
            tag: << parameters.tag >>
            env: << parameters.az-env >>
            az-user: << parameters.az-user >>
            az-site: << parameters.az-site >>
            jira-transition-id: << parameters.jira-transition-id >>
            jira-url: << parameters.jira-url >>
  - slack/notify:
      event: pass
      channel: << parameters.slack-channel >>
      custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Deployment Successful! :tada:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project:*\n$CIRCLE_PROJECT_REPONAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Environment:*\n$AZ_ENV"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*When:*\n$(date +'%m/%d/%Y %T')"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Tag:*\n$TAG_TO_DEPLOY"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Tickets:*\n$JIRA_ISSUES"
                    }
                  ],
                  "accessory": {
                    "type": "image",
                    "image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
                    "alt_text": "CircleCI logo"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }
  - slack/notify:
      event: fail
      channel: << parameters.slack-channel >>
      template: basic_fail_1
